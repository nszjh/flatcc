#ifndef NV_SYS_PARAM_VERIFIER_H
#define NV_SYS_PARAM_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef NV_SYS_PARAM_READER_H
#include "nv_sys_param_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"


static inline int Nv_ns08_HI_DEV_COMM_CFG_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Nv_ns08_HI_DEV_COMM_CFG_identifier, 8, 4);
}

static inline int Nv_ns08_HI_DEV_COMM_CFG_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Nv_ns08_HI_DEV_COMM_CFG_type_hash, 8, 4);
}

static inline int Nv_ns08_HI_DEV_COMM_CFG_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 8, 4);
}

static inline int Nv_ns08_HI_DEV_COMM_CFG_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 8, 4);
}

static inline int Nv_ns08_HI_DEV_RTSP_CFG_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Nv_ns08_HI_DEV_RTSP_CFG_identifier, 8, 4);
}

static inline int Nv_ns08_HI_DEV_RTSP_CFG_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Nv_ns08_HI_DEV_RTSP_CFG_type_hash, 8, 4);
}

static inline int Nv_ns08_HI_DEV_RTSP_CFG_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 8, 4);
}

static inline int Nv_ns08_HI_DEV_RTSP_CFG_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 8, 4);
}

static inline int Nv_ns08_HI_DEV_CFG_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Nv_ns08_HI_DEV_CFG_identifier, 64, 4);
}

static inline int Nv_ns08_HI_DEV_CFG_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Nv_ns08_HI_DEV_CFG_type_hash, 64, 4);
}

static inline int Nv_ns08_HI_DEV_CFG_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 64, 4);
}

static inline int Nv_ns08_HI_DEV_CFG_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 64, 4);
}

static inline int Nv_ns08_HI_PARAM_STABLE_INFO_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Nv_ns08_HI_PARAM_STABLE_INFO_identifier, 108, 4);
}

static inline int Nv_ns08_HI_PARAM_STABLE_INFO_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Nv_ns08_HI_PARAM_STABLE_INFO_type_hash, 108, 4);
}

static inline int Nv_ns08_HI_PARAM_STABLE_INFO_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 108, 4);
}

static inline int Nv_ns08_HI_PARAM_STABLE_INFO_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 108, 4);
}

static inline int Nv_ns08_NvSysParam_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Nv_ns08_NvSysParam_identifier, 124, 4);
}

static inline int Nv_ns08_NvSysParam_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Nv_ns08_NvSysParam_type_hash, 124, 4);
}

static inline int Nv_ns08_NvSysParam_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 124, 4);
}

static inline int Nv_ns08_NvSysParam_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 124, 4);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* NV_SYS_PARAM_VERIFIER_H */
